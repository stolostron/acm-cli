name: Test

on:
  push:
    branches:
      - main
      - release-[0-9]+.[0-9]+
  pull_request:
    branches:
      - main
      - release-[0-9]+.[0-9]+

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Lint
        run: |
          go mod verify
          make lint
          make fmt
          git diff --exit-code

      - name: GoSec Scan
        run: |
          make gosec-scan

      - name: Validate build data
        run: |
          exit_code=0

          echo "=== Validate Dockerfiles"
          if ! diff \
          <(grep -v "^FROM .* builder$" Dockerfile) \
          <(grep -v "^FROM .* builder$" Dockerfile.rhtap | grep -v "^LABEL cpe="); then
            echo "  ❌ Dockerfile and Dockerfile.rhtap are not in sync"
            error_code=1
          else
            echo "  ✅ Dockerfile and Dockerfile.rhtap are in sync"
          fi

          echo "=== Validate Konflux CPE label"
          version="${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}"
          if [[ ${version} =~ release-[0-9]+.[0-9]+ ]]; then
            version="${version#release-}"
          else
            version="$(curl -s --fail https://raw.githubusercontent.com/stolostron/governance-policy-framework/refs/heads/main/CURRENT_VERSION | head -n 1)"
          fi
          if ! grep "LABEL cpe=.*${version}" Dockerfile.rhtap; then
            echo "  ❌ Dockerfile.rhtap does not have the correct cpe label. Expected '${version}'"
            exit_code=1
          else
            echo "  ✅ Dockerfile.rhtap has the correct CPE label"
          fi

          echo "=== Validate git submodule branches"
          for submodule in policy-cli policy-generator-plugin; do
            if [[ $(git config --file ".gitmodules" --get "submodule.${submodule}.branch") != "release-${version}" ]]; then
              echo "  ❌ submodule '${submodule}' is not on the correct branch. Expected 'release-${version}' :"
                git config --file ".gitmodules" --get "submodule.${submodule}.branch"
                exit_code=1
            else
              echo "  ✅ Submodule '${submodule}' is on the correct branch"
            fi
          done

          exit ${exit_code}

  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build image
        run: |
          CONTAINER_ENGINE=docker make build-image

      - name: Test image
        run: |
          make e2e-test
